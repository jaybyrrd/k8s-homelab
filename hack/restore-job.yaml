---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: $APP-restore-pv
  namespace: $NAMESPACE
spec:
  storageClassName: $APP-restore
  capacity:
    storage: 1Mi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: ${SECRET_ATLAS_NFS_SERVER}
    path: "${SECRET_ATLAS_NFS_ROOTDIR}/kopia"
  mountOptions:
    - nfsvers=4
    - tcp
    - intr
    - hard
    - noatime
    - nodiratime
    - nolock
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: $APP-restore-pvc
  namespace: $NAMESPACE
spec:
  storageClassName: $APP-restore
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ${APP}-${PVC}-restore-snapshot
  namespace: ${NAMESPACE}
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      automountServiceAccountToken: false
      restartPolicy: OnFailure
      containers:
        - name: restore
          image: ghcr.io/onedr0p/kopia:0.11.3@sha256:2ae9ede0edac68c09d517abd71fa12c96efcf19f27ce7ffca968cebb10ed0e2d
          env:
            - name: KOPIA_PASSWORD
              value: "none"
          command:
            - /bin/bash
            - -c
            - |-
              shopt -s dotglob
              printf "\e[1;32m%-6s\e[m\n" "[01/04] Connect to repo ..."      && kopia repo connect filesystem --path=/snapshots --override-hostname=cluster --override-username=root
              printf "\e[1;32m%-6s\e[m\n" "[02/04] Remove previous data ..." && rm -rf /data/${NAMESPACE}/${APP}/${PVC}/*
              printf "\e[1;32m%-6s\e[m\n" "[03/04] Restore snapshot ..."     && kopia snap restore "${SNAPSHOT}" /data/${NAMESPACE}/${APP}/${PVC}
              printf "\e[1;32m%-6s\e[m\n" "[04/04] Disconnect from repo ..." && kopia repo disconnect
          volumeMounts:
            - name: data
              mountPath: /data/${NAMESPACE}/${APP}/${PVC}
            - name: snapshots
              mountPath: /snapshots
          securityContext:
            privileged: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ${PVC}
        - name: snapshots
          persistentVolumeClaim:
            claimName: ${APP}-restore-pvc
