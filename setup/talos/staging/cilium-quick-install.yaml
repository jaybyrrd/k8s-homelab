---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUl4ZU9LYS8xMlZtV0liNzZ5TWNRa0F3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBME1qRXlNREkyTXpKYQpGdzB5TlRBME1qQXlNREkyTXpKYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMxNHRldEpOYmlucnZOK0l4MHVBd0YKVXJIVmd5SzdYVGNwSmpML0dVU3ZKZUtOZG9YVUJKd1ZLMkgxaTFpeFBTbE9GYzRHbW5SMkhoM3V3N2NCU1JETwpOUE1zM0NMSkpaTWhZSGpKekc2RThTQUptK1VpOGhadjJ0UGxTTjVjU1VCemdYUktnK0tuRzdJY3NuWHFyN1ZVCmtSWFJnRXB4RndIZmRSMFd3YWZrTE15bklKa1I3cEJyb1BnN1VuMjV4K3BkZ3oyNnJtUHNUTEJMdXRTQXExZHoKYkR1UUU1MnBVSGNXUUZkWG54NUl0OGVEcnFMNDFPMUFrOFhZbW85b0Qxd1BoUnBtWWFYTUlzVDhuMnROM21MbwpwdWxhQUkxVi9xRXdyZW1TeU5rcWk2WjBVWDlEdTM1NkYvSXdSV1FtTm1CZHRSYmxiQU8wMlFZdy9Na2xmU3VwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb21VY25lNjNySFRDMzE5KwpQK2d2WHd5enZiRXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ05LWE5JYmFSM1JRdTUzOS9FOEdZRmszWEgvCjYyZkZOd3JEczZHSWRISi82WE5vK210c280Z2lVNDh5N2d2SmRoRzVnRlFoRDNYREJnM1V4emUzS3RqUFJsb1YKYzJXM2JBMi81ZW05VlVrVU9EYk0zVHJXSC91ZU9QWlkvT1E1TXFRZUh4czllOEFGd3BWOWlPTDlDYWs0dHRKVgphVnZrdzdlWGVTS000cVhMZTBWUDc1U3RaZ0I4ajJIamFvaEo3ZHdIbjFiY2lkcVdYenprcEMySVB2NTArNDdrCjhSQktqOGNlaUIxeEZReG5QaVhaM0tmbE5RS3J5QnVJNldvTXh1OElEUjFSbm1teXJGZitsL1VUVVJ4bjdnWlkKcTZ6YWFqT01TbittemtjT0plRy80WlRLNjl5T1ZIcUFyWklHL2doYjA0cnlGQmI2TXcwRE16RlppRkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGVMWHJTVFc0cDY3emZpTWRMZ01CVkt4MVlNaXUxMDNLU1l5L3hsRXJ5WGlqWGFGCjFBU2NGU3RoOVl0WXNUMHBUaFhPQnBwMGRoNGQ3c08zQVVrUXpqVHpMTndpeVNXVElXQjR5Y3h1aFBFZ0NadmwKSXZJV2I5clQ1VWplWEVsQWM0RjBTb1BpcHh1eUhMSjE2cSsxVkpFVjBZQktjUmNCMzNVZEZzR241Q3pNcHlDWgpFZTZRYTZENE8xSjl1Y2ZxWFlNOXVxNWo3RXl3UzdyVWdLdFhjMnc3a0JPZHFWQjNGa0JYVjU4ZVNMZkhnNjZpCitOVHRRSlBGMkpxUGFBOWNENFVhWm1HbHpDTEUvSjlyVGQ1aTZLYnBXZ0NOVmY2aE1LM3Brc2paS291bWRGRi8KUTd0K2VoZnlNRVZrSmpaZ1hiVVc1V3dEdE5rR01QekpKWDBycVFJREFRQUJBb0lCQUZoQ0I3ZmJyVzN2NmwrcQo0TFR1YmQ3VFhybWxWV0FuZmxHNFdIeVNqVktVQnBmd1VFWXVLbkxYUjBSMzVvU3lrZTF6QlRNTkZjQVBJeVV0CjBRcU5vdHI4dEpjckJySW1TbnVpclZuMm1oWm1UczU2MkRnWjBxdGFPd0lDVnV2Zkc2Z3d3L1k0Z3UzbHNZcmQKU2Z5a1lFLzF5dW1LNEJSNlBvMW83Y0dTSE43SjBOVytTMzByTDVFYnc4S2wxSzczZWJkWk9rTWRkeVp5OUZhdgpyVXhrSFkxcUs3VzRSZTNIVmZIcmw5eE1EL3B2bE9xUk1VNjI5NUFZMlBrT2dNVHhlNDVhQzVLNFVKVmlQR1BQCjMwR09Cc2d3czFCWllyeDIzaUJIV0hCaVhnVFh0NEsydWNQSm00ZGNUdlI1U2Jybzgxd1NRU0tKd25mUHM4RlcKY0ViV1NxVUNnWUVBM1M4VnZoSkh3M20rT0pLR2NFNTNHTjNnd0pmK1M2Q00yVnlyMGJ3azQxWVJ3UU5hSThROQpnWG1VQnlQeksrbWJ3L3hqSFp0UjlnVHdZOVJ4RnkrQURJNzk0cExBZzk4YVQ4QTgvdzZmbWlmQUtDNkRBZzY5CkZPWE9JQWFkRjc0Z2ZPelFRT09YR0lPSFlEcFVyUmxKYWtWRmN4Vjh0aTVzK2xKVXZDcm0wd01DZ1lFQTBvUXkKYTIzWitoaGxBZjBSZzRQbU9OU2dzbUEzZUh5Y3huVlBNNzVqUWxoTVY0QW9rKyswd0hTVVY0dGNraWxHTDJxTwpMejBKRWNvakdMYVNXT0x5QkRId1M4OE8wZm1pQWJOMWQvOG9ERkRoZ29vOTlzZXlyY2VRMmNWRmhVT0NwRE5qClN5ZW84clBmRERQZ0lWbVd4R0xhblpFclZ4TnZBUlVVMDRQcXNPTUNnWUJiN1VQV0dYYm1FV1V6MGdJNkR3S0UKdlVLNkNQSFJzTXFaVkdDODdMdFFHT2VNRnI2Uit1K3RMa0NOcnkxVDVPV3VVT2xJMXRMN3N4WE9CKzl3dVhjNAp3UDFYKzdJem5MZ3N5VE1RdHAweXpxNlloS3hDWUtuSlU3R1ZzZW44Z2pLeWVTSWN0ZnFJWDdJV0ZtZzNBVGw0CkI0NVR4R3h1czJEcnNPZ3l4SW5telFLQmdRREFNQTR6dzVNbjN0T0FNRUNuOTJmYjVFcGM3cmhWbURZc2ZIWjEKUDlBd2hwb1RuQjN2aVB4VVkxbjJYbldCdm9xanlUekxaWVo5SmpSS1lJdFUrTU9JRHV0WTJreW1aNmQrdEE1LwpJWU8zVXJPK1VHVG5na0xlb2YzY3dsdUlvU3lJcVoxeHhHQmFTdHBMc3FSZzdnQlZoQVlmcWFPT21HQlQ5YUlRCnhETWpqd0tCZ1FDZkZtbDdtZ0NGTmZOVWxWNGVKU3lUaE1iMWgxbmN6azJXU0g3eVZ0Y29VOGVVemx5S0pRT2IKN2Vna3VieWI3dGdsNjFhWVJLZGU4cGU3ZWFtc2Vrb0VxODltSmFrZ0o2WDlERGcrSHpYd0k3OVlJL2lZSDhIVwpZOW9JZzEyVDB3V2NibnFCc3BINk1JTjl3YklJTUF5dFJQU21NaE5QZ21JdnpqMTNuUjhJdGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUl4ZU9LYS8xMlZtV0liNzZ5TWNRa0F3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBME1qRXlNREkyTXpKYQpGdzB5TlRBME1qQXlNREkyTXpKYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMxNHRldEpOYmlucnZOK0l4MHVBd0YKVXJIVmd5SzdYVGNwSmpML0dVU3ZKZUtOZG9YVUJKd1ZLMkgxaTFpeFBTbE9GYzRHbW5SMkhoM3V3N2NCU1JETwpOUE1zM0NMSkpaTWhZSGpKekc2RThTQUptK1VpOGhadjJ0UGxTTjVjU1VCemdYUktnK0tuRzdJY3NuWHFyN1ZVCmtSWFJnRXB4RndIZmRSMFd3YWZrTE15bklKa1I3cEJyb1BnN1VuMjV4K3BkZ3oyNnJtUHNUTEJMdXRTQXExZHoKYkR1UUU1MnBVSGNXUUZkWG54NUl0OGVEcnFMNDFPMUFrOFhZbW85b0Qxd1BoUnBtWWFYTUlzVDhuMnROM21MbwpwdWxhQUkxVi9xRXdyZW1TeU5rcWk2WjBVWDlEdTM1NkYvSXdSV1FtTm1CZHRSYmxiQU8wMlFZdy9Na2xmU3VwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb21VY25lNjNySFRDMzE5KwpQK2d2WHd5enZiRXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ05LWE5JYmFSM1JRdTUzOS9FOEdZRmszWEgvCjYyZkZOd3JEczZHSWRISi82WE5vK210c280Z2lVNDh5N2d2SmRoRzVnRlFoRDNYREJnM1V4emUzS3RqUFJsb1YKYzJXM2JBMi81ZW05VlVrVU9EYk0zVHJXSC91ZU9QWlkvT1E1TXFRZUh4czllOEFGd3BWOWlPTDlDYWs0dHRKVgphVnZrdzdlWGVTS000cVhMZTBWUDc1U3RaZ0I4ajJIamFvaEo3ZHdIbjFiY2lkcVdYenprcEMySVB2NTArNDdrCjhSQktqOGNlaUIxeEZReG5QaVhaM0tmbE5RS3J5QnVJNldvTXh1OElEUjFSbm1teXJGZitsL1VUVVJ4bjdnWlkKcTZ6YWFqT01TbittemtjT0plRy80WlRLNjl5T1ZIcUFyWklHL2doYjA0cnlGQmI2TXcwRE16RlppRkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRVnpoZzUxMGcya3RtZVRCalZuOGFXakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURReU1USXdNall6TWxvWApEVEkxTURReU1ESXdNall6TWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTh6dGgxUHlkZURLdU5ZL2wKUE1laUxTRi9jWTI4eVJJY0o4Y2pMdTFKZWJaUnJYbWlhbFhiam9pN2w3cndPSjBJd1ByTFVibklhNFN3Q3FPdwovYTNmcmx4UzZNbHkrQytkYlVFcU1Vd1Y1RktPN0d0b1Z3UE5kYVlxeTJaN2E4VTRsbEs0cjhId3Uya1VJQ1JhCklWWTZTOXUrTmlGbjdRZVQzbGZEN0VzMDRXNEplK28vVVZjaXV1d1pSQW40RmZTUENhYWg5Nzh2OWt3NHQvaGcKM2dXRjIrVFUwRU9hTERwYlJKenV2UHVwTXROL25teXBVQk95REh6UnlNSkMxaFhrVUtzR250MDR5WTUyaWtuMwpIYmFjb0JvMkhHSnpFQ3Y4dVdqKzh4RXBCUEFnOEJPVFpIZjJ1S1ZjT1hQbHZPYzhKWi9nZFAyQlFtS2pVOVUyCjBoSlhYd0lEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU2laUnlkN3JlcwpkTUxmWDM0LzZDOWZETE85c1RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQVlUOC9hVlJtTFJ4Yytiem9HaHlrdi81Rkx1aGJuT29qNWkKQ3hMSm9VbTYrT3ZmcFVNQnRVbkJqSXNJM2JIbnM5WmVxaC9pY0U5R1l5RjREbzE2QngwdUp4bm9CcDN1WHN4TApUZVRqZzhpQm9sOWgyV1IyWUpJSGU4dzFzZzV1REVJYTIzSS9yUitKSFFVM3BVU3VuQTYrS3JLMXFraFUxOTlhClI4TlFIK0x0aDhzUURCT01yanBGLzBibTl3cU9rQWRwU2M4MjF2cHI0ZzFMYmZYRTZJNzNMM2xOazJ6UGhUc1AKU2U1OGFHZXR4OFd1aEVxZUpadGJWeGd4ZythTXVqaC9UYjVIYkJ6RUFrSTUvWG41UDBweGRHbndwL1kvZVRpeQprS0E5TXY4N0VnQTR1OWR0MHU0U1Y1NUFvdnc0My90OWpScUFCc1NXYjUvUXc5M3JCTUU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOHp0aDFQeWRlREt1TlkvbFBNZWlMU0YvY1kyOHlSSWNKOGNqTHUxSmViWlJyWG1pCmFsWGJqb2k3bDdyd09KMEl3UHJMVWJuSWE0U3dDcU93L2EzZnJseFM2TWx5K0MrZGJVRXFNVXdWNUZLTzdHdG8KVndQTmRhWXF5Mlo3YThVNGxsSzRyOEh3dTJrVUlDUmFJVlk2Uzl1K05pRm43UWVUM2xmRDdFczA0VzRKZStvLwpVVmNpdXV3WlJBbjRGZlNQQ2FhaDk3OHY5a3c0dC9oZzNnV0YyK1RVMEVPYUxEcGJSSnp1dlB1cE10Ti9ubXlwClVCT3lESHpSeU1KQzFoWGtVS3NHbnQwNHlZNTJpa24zSGJhY29CbzJIR0p6RUN2OHVXais4eEVwQlBBZzhCT1QKWkhmMnVLVmNPWFBsdk9jOEpaL2dkUDJCUW1LalU5VTIwaEpYWHdJREFRQUJBb0lCQURvbVZEbExPNHBrODJreQp3YWRLUXVkdlByeXpHaE1vRlRzZFRMZ0hXcTJTZk94d1MvZ0lGcmw0endCelhNTHNLQSthNWNqZ0ZaNCsxcWQwCmd2ZmkvYnI5cjRTZnhMQzVFWFh4UWxrT3k1ME9iOFR0Mk1BVTFLWHYyQU5RdU9rRytZUld1bmlxY1JjZEJBYTcKS2lFV01GRzZjenNWdVhiZGZPaUhLdnZ1N3ZHRm1jVUVxVkYrajhZaWw2a0pBM2JuTG11UzdVZHBneml6Y0Q1cApmWkY5aU9YTkdtQy9rNXVpWDhhbkRaUEozSWcvL2UwQkJvR3VrK0FIeFVMOXBGQXdWOVo3YlJtdjExQllhdHJzCk5Bc1IyOVAyVlNSYUIzSFowVTc4czROUHdEbjFFNXdGYzR2dFB4UXRZaU1ublRjWjIvSEo4aHRGb3pDTS9HbDUKbDJZMGdrRUNnWUVBOTBSVDZ6d3JhT3Z0QksxMlpMK200OEVxZGZmdDRnNWwrQ21NUk5sRzJSeHhhNFdETUJGSwpQRk5NLzZ6UW9nYVF1NVVMNy80UStWMUh1eW1iQWw3VndQRFlYSzdIMjczNTJNb2ZDZnZKMU44clhUTmNlOS9aCmdHN0pRRU4xN24veGYrdnY2NUZqWGhYTFVVR3kzRzZ5Wk5WYmdhNTQwNVlRTFdiVWxSdTQvRGtDZ1lFQSs5S1MKZitiRkdKQkgvUkRwZ3J6dlJlK2szL091WEhHeEt1U3FBSVV2TGRaSzgvS040MnRMSys2RlpETkdBODRqcjZFVwpLUm00cGNEOWN2MTY2MGJnVTExcXNHUFFWTDN4RzdQbFozMjRId29wZENjUFVKa1JSaGtkMTJQdm5HVWxHUjl3CjJTVloweHRMcU10SWczb2tEMlVWdFNnSXFGZnh5SDdvOVY4Wm9GY0NnWUVBM3lPVUw2YWU3aEpxVkZ4TmlXSEMKczZud0xZRk45VUJWR1B3MWp6UWMwWFR2amI1d3d3SDNZalV5T1ZDMC9tSzZYZTJGVmxDSzlONFBDNEhpVnVOSwpOdEdpRHhIVFhpUTB3a1MwZWdmMC9kdGZnTDRHNmVyNmx3SmpMMUV4cmNkY0lyckNTbTFycE00Nkt0d0ZFeFA2CmZUQmxZY1FYV2FvRWMxUm01eUNiY1ZFQ2dZQVBBeSt1cGxCTHRaWkZGUFFHMGtLbGRiTHJrdmhyRkhBT2NaRmMKOUpPcWRPTUZCZ25GYkFrUU5ta0hYek1tV095eHRMWEFmNE1OaHFMVmJ4MGIxNTdaK1hDNTBVbURNOHVpN2llWAo4dHUrSmZud3JiOXcrNThYQWJwUXMrbDk5bDJ1MEx3R2hmNkQ0bFd4VzJVWVNYakszaWpjSXVYWk8xenpxZlV6Clk1Y0Fnd0tCZ1FEcGVWMHNNSjZsbktHcWpESXlRb3lLOXNIV3QrNWhncDRMSnEwa2xyckY4Rkw1c0FzQ0NQMUsKdVJoUzE1UTFtYytpVG9FaXRZQjdOanQ4aEl0d1RjSzBmSGlXZlhzS0Era3JaVVJsK0NiZnRCM1dCbEp6dytidgpudElhdnZDVmRWTUxLbTBYR0tST2pteks4S3lVV1p6cmVWZkYzNGZvbUNoOUVEQ28rdEFTTlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUl4ZU9LYS8xMlZtV0liNzZ5TWNRa0F3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBME1qRXlNREkyTXpKYQpGdzB5TlRBME1qQXlNREkyTXpKYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMxNHRldEpOYmlucnZOK0l4MHVBd0YKVXJIVmd5SzdYVGNwSmpML0dVU3ZKZUtOZG9YVUJKd1ZLMkgxaTFpeFBTbE9GYzRHbW5SMkhoM3V3N2NCU1JETwpOUE1zM0NMSkpaTWhZSGpKekc2RThTQUptK1VpOGhadjJ0UGxTTjVjU1VCemdYUktnK0tuRzdJY3NuWHFyN1ZVCmtSWFJnRXB4RndIZmRSMFd3YWZrTE15bklKa1I3cEJyb1BnN1VuMjV4K3BkZ3oyNnJtUHNUTEJMdXRTQXExZHoKYkR1UUU1MnBVSGNXUUZkWG54NUl0OGVEcnFMNDFPMUFrOFhZbW85b0Qxd1BoUnBtWWFYTUlzVDhuMnROM21MbwpwdWxhQUkxVi9xRXdyZW1TeU5rcWk2WjBVWDlEdTM1NkYvSXdSV1FtTm1CZHRSYmxiQU8wMlFZdy9Na2xmU3VwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb21VY25lNjNySFRDMzE5KwpQK2d2WHd5enZiRXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ05LWE5JYmFSM1JRdTUzOS9FOEdZRmszWEgvCjYyZkZOd3JEczZHSWRISi82WE5vK210c280Z2lVNDh5N2d2SmRoRzVnRlFoRDNYREJnM1V4emUzS3RqUFJsb1YKYzJXM2JBMi81ZW05VlVrVU9EYk0zVHJXSC91ZU9QWlkvT1E1TXFRZUh4czllOEFGd3BWOWlPTDlDYWs0dHRKVgphVnZrdzdlWGVTS000cVhMZTBWUDc1U3RaZ0I4ajJIamFvaEo3ZHdIbjFiY2lkcVdYenprcEMySVB2NTArNDdrCjhSQktqOGNlaUIxeEZReG5QaVhaM0tmbE5RS3J5QnVJNldvTXh1OElEUjFSbm1teXJGZitsL1VUVVJ4bjdnWlkKcTZ6YWFqT01TbittemtjT0plRy80WlRLNjl5T1ZIcUFyWklHL2doYjA0cnlGQmI2TXcwRE16RlppRkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUoxUHRRaHhFTng4RWF4UjB1OU9najR3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBME1qRXlNREkyTXpKYQpGdzB5TlRBME1qQXlNREkyTXpKYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQVhqYWgKR2s0Qm9ob3lCaFRGK2pkcVN5VDNTRkhYSFZoalV4dEowUHRpRElNbTNVV2U2SW1pUEpqUTFVV1luV0FoQWZQOQp3VittR1JBWHVFSTBIT2ViNUlHVGx6OHY4Q09ESGtHd09xYkhVQkhrT1h5Y1ByU2NFU3JraWJWU0wxUkRVVk00CmlWWm5PbkVNaWNoMkhhLzloM1ZIV20xTEpqRExSelZsSWRsRFluUkpxZ1dOTk93aElXYTc2M2RoSDI5Mm9xSUwKZnliRE94d3BFYXVtVUptMkpnWjh2WUlFZjU2cTZ1YUhDWlBIdmdhSFV6VGE4TU1GU3lJTEh0U0RsY3F6SlR3QwpFbVhPSE9NMTBDVGRZVWpyNkdtMDRNYjlRbnQ0aDYxVGYzOU9Ya1hXUXZVRE5Nd3J5RlAvOVg4Wm9HQ244YjRRCjlnUGdWNFRWa1RzN1NjSG5BZ01CQUFHamdZMHdnWW93RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVcKTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQQpGS0psSEozdXQ2eDB3dDlmZmovb0wxOE1zNzJ4TUNvR0ExVWRFUVFqTUNHQ0h5b3VaR1ZtWVhWc2RDNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFCT05HUlVGZldIQ1h1dGgKa3hSTE0xQ3lWazJvRWQzM3hJN3pyL2ZHTVRsQm4rUkVZWHVrSDArVEtVNHc1YlNUNitLMFkvaXhKWEpjQlI5QQpOQkdSTllxV2Z5YlpWT3F5Q1dLMFpBYzFPT1lnMzZUYVlUSlZBMFdjQVdPY3lKbW0yMGFwbllhWVZzUEF1OXI2CnVLSy9Tdy9pVmM5eUExWEJ2aHErQXhTOGlidWhaaFFtdWRvVzl0M2I2enNqc21sVk1oc2pyYXFFcjdXUXRTNUMKd1hxanpFK2xldEJyV3QvOWlwc3Evc24xZ0FCeXFSNzZyMXhZT2ppUkxOM1JudjFuTllsSnU3VGhKSUszOEg5ZQoyVzRIaHR6bTRsVUFNTFZGQXdkMXFTSTU1Y01CV1VDK1c5TWRjNENTYjhod2xobFhCRlAzNzhOQWpseEhzSjhHCjgyZ3p5Q1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd0Y0Mm9ScE9BYUlhTWdZVXhmbzNha3NrOTBoUjF4MVlZMU1iU2REN1lneURKdDFGCm51aUpvanlZME5WRm1KMWdJUUh6L2NGZnBoa1FGN2hDTkJ6bm0rU0JrNWMvTC9Bamd4NUJzRHFteDFBUjVEbDgKbkQ2MG5CRXE1SW0xVWk5VVExRlRPSWxXWnpweERJbklkaDJ2L1lkMVIxcHRTeVl3eTBjMVpTSFpRMkowU2FvRgpqVFRzSVNGbXUrdDNZUjl2ZHFLaUMzOG13enNjS1JHcnBsQ1p0aVlHZkwyQ0JIK2VxdXJtaHdtVHg3NEdoMU0wCjJ2RERCVXNpQ3g3VWc1WEtzeVU4QWhKbHpoempOZEFrM1dGSTYraHB0T0RHL1VKN2VJZXRVMzkvVGw1RjFrTDEKQXpUTUs4aFQvL1YvR2FCZ3AvRytFUFlENEZlRTFaRTdPMG5CNXdJREFRQUJBb0lCQUJPUVFVd0hDZEhlczMxTQo0d1h6V1hsazVRQ0ZDVld3TlZIOG5MVFlIUWl1cnhQZnd2blRPbFFXaDVBTmNJT0IxY25sa2ZQSG03dWZwdVJTCnArRDI0NU1XSFJ0dWNVMmx4V2JMUi9EdE5oTGxFTHkrSCs4ZjdXeEZ6cS9wVlZoaldkVnl5dHpnRXJweTFoWnAKV01xeVlEaVBjeHpybEZ2bEtXY3krYm9zUkJVM0craEVJN21JRXBFM2hVTnViRnpTRW50ZXp3UVJMT3YvMFZKbQpFQTBGSTlpWEhZZk9Bd01VV1RseURBbUJwSkxMYlJKZnRhM3VMV294SzhyTDZ5Y3JtRk9OcGJQK0tTM2ZSa1lUCkp2M3dlcnpqcnVYZmN6TFBGeWNsWVFBdnpRWkVIdTNhZSt3aW91eTBIeDZETUNDRVV4bmU5MjlaekttU3hkSlUKb2cweURva0NnWUVBMk9hb0dWdzBGMGZkY1R6d20weDQxa0JFOUdHbU9nbEo0K2Z1ODZVVTdvQ0tydkdDKzZ5UApOZFhWaUx1Tk5qeW9Ob3ZQVHpQelcrMmtWQVkzTUVwdHpUMEduUkIwZ3dBMHl6enVtL1F0a2lYOEJReDhGeHc0CjdHK2hZQ2s1V3RYMzA0bzhTU09GNCtHZWFrMHNTbzJGZE03TGF6VSt1UUFhUGdmRG5sZFZjRlVDZ1lFQTR3dHUKaTVxWldpaEZTT3hyd09DV3pPN2YzMEZLQU1UNXo2Z2lxY0J0d3BLaTUyM211TmxBR1FadDY1N0tFS0ZtdFV1bApZMkY1VmxUa2MrbFdmbGtWa3FON2ZFWVZyY3c4MGRLbHB0UVkxdkk3WHhyK2c4WmV0dHMvb3ZOUlJld3BRS0prCnRPb2x5R1dNU1dRSTAwNDF2dkNkaVFyQ1BSeHBGalk0cnlRL2RVc0NnWUVBMGlTUEFwc0JZUGpnZytDZDRHaHoKdm1oZ0prRWhjcU1qTXFxNEtOaHM4aklacXlzVVUwKzVKRmg3WE5FUkhGWWlSMDZuV0w0bGJwQk1JSmd4Q2hsaQpUbkZzb2VtYWFIMWZxUFRzM0szekpPQ21UaUh0YTlxTkVBMkxWUVk3cWxVWm1ac1prMmJXUnBXR0RNbWVPdERvClZ1WXYwVHV4L0Qwc0w2TUlGTFhhY2swQ2dZQXY3dDNyd3p2VStPT0h2Y0lSK2xoYjg2SjM4OFMzM040UXBTS00KUy8vZ01DME1SdnVLMHZMaFZhWW5OR0xjbC9hakY5Rlc1ZUZFQkxBbWVJQzJOQUNGOE5YRkt0YXcxb21Ra3JRKwpRRkR1TUQyd21uWlpRNndEVnM1Y2pKbi85UmZRZVhoaGFYMklqVWZNeHIzR1BxRENLdkpYV0ZvaHBMbmE0cCtjCitqNGJlUUtCZ1FEQ3ZNNlpjS1VWc0xzREZ4bzcxSlE5MHlQSFQrVFo0QUF2c3J0WndWdklnbGlSZE9rTXZtdjkKdk5Ub2R6dmZSZHFMRTV0MXNWSGVGRVo4SzkrRmN1NHNPZmxyaHZrOVJSOFdyR1hzWlFQOFBEZ0JrWnFxYzBPUApJdWp1SC9CNmlkeGo1UzNXejF1RGphSVVzODR4aEdlR3NUNnh2RmY2bEU2aUFjWFJpdWZLRnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.4@sha256:d9d4c7759175db31aa32eaa68274bb9355d468fbc87e23123c80052e3ed63116"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.40.80"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.4@sha256:d9d4c7759175db31aa32eaa68274bb9355d468fbc87e23123c80052e3ed63116"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.4@sha256:d9d4c7759175db31aa32eaa68274bb9355d468fbc87e23123c80052e3ed63116"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.40.80"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.4@sha256:bf75ad0dc47691a3a519b8ab148ed3a792ffa2f1e309e6efa955f30a40e95adc
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.40.80"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.11.4@sha256:460d50bd0c6bcdfa3c62b0488541c102a4079f5def07d2649ff67bc24fd0dd3f"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: hubble-sock-dir
            mountPath: /var/run/cilium
            readOnly: true
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: hubble-sock-dir
        hostPath:
          path: /var/run/cilium
          type: Directory
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.8.5@sha256:4eaca1ec1741043cfba6066a165b3bf251590cf4ac66371c4f63fbed2224ebb4"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.8.5@sha256:2bce50cf6c32719d072706f7ceccad654bfa907b2745a496da99610776fe31ed"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      - name: proxy
        image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        command: [envoy]
        args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        volumeMounts:
        - name: hubble-ui-envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: hubble-ui-envoy-yaml
        configMap:
          name: hubble-ui-envoy
